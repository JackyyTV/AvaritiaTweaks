buildscript {
  repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mc_version}-${mod_version}"
group = "jackyy.avaritiatweaks"
archivesBaseName = "AvaritiaTweaks"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
  sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
  version = "${forge_version}"
  runDir = "run"
  mappings = "${mappings_version}"

  replace '@FINGERPRINT@', project.findProperty('signSHA1')
  replaceIn "AvaritiaTweaks.java"
}

repositories {
  maven {
    name = "JEI Maven"
    url = "https://dvs1.progwml6.com/files/maven"
  }
  maven {
    name = "CB Maven"
    url = "http://chickenbones.net/maven"
  }
  maven {
    name = "CoFH Maven"
    url = "http://maven.covers1624.net"
  }
  maven {
    name = "Curse Maven"
    url = "https://www.cursemaven.com"
  }
}

dependencies {
  deobfCompile "mezz.jei:jei_1.10.2:+"
  deobfCompile "curse.maven:hwyla:2433252" //1.8.17-B31_1.10.2
  deobfCompile "codechicken:CodeChickenLib:1.10.2-+:universal"
  deobfCompile "curse.maven:avaritia:2441664" //1.10.2-2.2.7
  deobfCompile "curse.maven:botania:2391169" //r1.9-341
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
  onlyIf {
    project.hasProperty('keyStore')
  }
  keyStore = project.findProperty('keyStore')
  alias = project.findProperty('keyStoreAlias')
  storePass = project.findProperty('keyStorePass')
  keyPass = project.findProperty('keyStoreKeyPass')
  inputFile = jar.archivePath
  outputFile = jar.archivePath
}

build.dependsOn signJar

task deobfJar(type: Jar) {
  from sourceSets.main.output
  classifier = 'deobf'
}

artifacts {
  archives deobfJar
}
